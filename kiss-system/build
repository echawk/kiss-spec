#!/bin/sh -e

echo "${1:?DESTDIR was not provided to this script.}"
echo "${2:?VERSION was not provided to this script.}"

cmds="
b3sum

strip
readelf
ranlib
nm
ld
as
ar

yacc

bzip2

curl

lex

cc
c++
cpp

kiss

m4

make

gzip

xz
"

opt_cmds="
strings
size
objdump
objcopy
dwp
c++filt
addr2line


c99
"


libs="
libcurl.so
libcurl.a

libstdc++.so
libstdc++.a

libc.so
libc.a

libssl.so
libssl.a
libcrypto.so
libcrypto.a

libz.so
libz.a
"
check_cmds(){
    for cmd in $cmds; do
        command -v "$cmd"
    done
}

check_libs(){
    for lib in $libs; do
        cc -print-file-name="$lib"
    done
}

check_cmds
check_libs

for cmd in $opt_cmds; do
    if ! command -v "$cmd"; then
        echo "WARNING: missing optional $cmd, some packages may have issues." >&2
    fi
done

command_and_libs_realpath="$(
    {
        check_cmds
        check_libs
    } | xargs -I{} realpath {}
)"

for item in $command_and_libs_realpath; do
    if ! [ -e "$item" ]; then
        echo "ERROR: $item does not exist!" >&2
        exit 1
    fi
done

kiss_db="${KISS_ROOT:-}/var/db/kiss/"

if [ -d "$kiss_db"installed/ ]; then
    mkdir -p "$1/var/db/kiss/"
    for item in $command_and_libs_realpath; do
        if ! grep -Fx "$item" "$kiss_db"installed/*/manifest; then
            echo "WARNING: $item exists but is not managed by kiss!" >&2
        fi
    done |
        cut -d":" -f1 |
        sort -u |
        sed "s+/manifest$++" |
        rev | cut -d'/' -f1 | rev > "$1/var/db/kiss/system"
else
    echo "ERROR: ${kiss_db}installed/ does not exist!" >&2
    exit 1
fi
